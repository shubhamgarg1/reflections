Commands Learned:


    git remote

    git remote add origin url
 
    remotes: These are repositories other than the one on your local disk which you can push your changes into 
    (so that other people can see them) or pull from (so that you can get others changes). 
    The command git remote add origin url creates a new remote called origin 
    located at url.
    Once you do this, in your push commands, you can push to origin instead of typing out the whole URL.

    git push origin master(The branch we are pushing)

    You can also use:

        git push url master
        e.g. git push https://github.com/shubhamgarg1/reflections master

    git pull origin master

    push the commits in the local branch named master to the remote named origin. Once this is executed, all the stuff that you last synchronised with origin will be sent to the remote repository and other people will be able to see them there.






When would you want to use a remote repository rather than keeping all your work
local?

    When you are using different machines, or collaborating with others

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Some changes might not be relevant to you. Therefore pulling everything might not be useful.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is just like a clone that github makes on their own machine.
    If we had done clone and push to copy the repository in our github then the original creater would not have gotten any recognition for his work.
    When we clone a repository git automatically sets up a remote pointing to the repository you cloned from.

    Clone is just copying a repository from some place to your local machine.

    Branch is entirely different from this. It means to create a different commit path that we may later merge.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that the changes you make are to the latest version which is expected to result in less conflicts later on.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Using copying pasting , mails
    Github is definitely better

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When collaborating, or showing wht you want to do and then make a pull reuest asking it to be merged with the master.

    You just saw that the workflow when making changes in a separate branch is more complicated than working directly in master, especially when you need to stay up-to-date with changes others are making. Rather than simply pulling and pushing, you need to pull changes into your local master branch, merge the local master into your branch (different-oil, in our case), then push your branch to the remote before finally merging your branch into master, either locally or on GitHub.
